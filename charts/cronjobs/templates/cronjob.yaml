{{- $api_version := include "common.capabilities.cronjob.apiVersion" . }}
{{- $chart_name := include "cronjobs.fullname" . }}
{{- $service_account_name := include "cronjobs.serviceAccountName" . }}
{{- range $job_name, $job := .Values.jobs }}
{{- $JOB_NAME_SLUG := include "com.klicktipp.slugify-volume-name" $job_name }}
{{- $env := mergeOverwrite dict $.Values.env ($job.env | default dict) }}
---
apiVersion: {{ $api_version }}
kind: CronJob
metadata:
  name: {{ $chart_name }}-{{ $JOB_NAME_SLUG }}
  labels:
    {{- include "cronjobs.labels" $ | nindent 4 }}
    {{- with $.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- if $.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  concurrencyPolicy: {{ default "Forbid" .concurrencyPolicy }}
  failedJobsHistoryLimit: {{ default 1 .failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ default 1 .successfulJobsHistoryLimit }}
  schedule: {{ .schedule | quote }}
  suspend: {{ .suspend | default false }}
  {{- if .startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ .startingDeadlineSeconds }}
  {{- end }}
  jobTemplate:
    metadata:
    spec:
      {{- if .activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ .activeDeadlineSeconds }}
      {{- end }}
      {{- if .backoffLimit }}
      backoffLimit: {{ .backoffLimit }}
      {{- end }}
      {{- if .completions }}
      completions: {{ .completions }}
      {{- end }}
      {{- if .parallelism }}
      parallelism: {{ .parallelism }}
      {{- end }}
      {{- if .ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ .ttlSecondsAfterFinished }}
      {{- end}}
      template:
        metadata:
          annotations:
            {{- with .podAnnotations }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          labels:
            {{- with $.commonLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- include "cronjobs.selectorLabels" $ | nindent 12 }}
            {{- with .podLabels }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        spec:
          restartPolicy: {{ default "Never" .restartPolicy }}
          imagePullSecrets:
          {{- with ($job.imagePullSecrets | default $.Values.imagePullSecrets) }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $job.dockerConfigJson | default $.Values.dockerConfigJson }}
            - name: {{ $chart_name }}-registry
          {{- end }}
          {{- if or $.Values.serviceAccount.create $.Values.serviceAccount.name }}
          serviceAccountName: {{ $service_account_name }}
          {{- end }}
          securityContext:
            {{- toYaml ($job.podSecurityContext | default $.Values.podSecurityContext) | nindent 12 }}
          containers:
            - name: job
              securityContext:
                {{- toYaml ($job.securityContext | default $.Values.securityContext) | nindent 16 }}
              image: "{{ $job.image.repository }}:{{ $job.image.tag | default $.Chart.AppVersion }}"
              imagePullPolicy: {{ $job.image.pullPolicy  | default "IfNotPresent" }}
              {{- if .command }}
              command:
                {{- toYaml .command | nindent 16 }}
              {{- end }}
              {{- with .args }}
              args:
                {{- toYaml . | nindent 16 }}
              {{- end }}
              env:
                {{- range $key, $value := $env}}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
              resources:
                {{- toYaml $job.resources | nindent 16 }}
              volumeMounts:
                {{- if and $job.storage (hasKey $job.storage "efs") (hasKey $job.storage.efs "mounts") }}
                {{- range $efs_mount := $job.storage.efs.mounts }}
                {{- range $efs_ap := $efs_mount.access_points }}
                {{- $EFS_AP_ID_TRIMMED := trimPrefix "fsap-" $efs_ap.id }}
                {{- $PVC_NAME := include "com.klicktipp.slugify-volume-name" (list $.Release.Name $JOB_NAME_SLUG (coalesce $efs_ap.name $efs_ap.path) $EFS_AP_ID_TRIMMED) }}
                - name: {{ $PVC_NAME }}
                  mountPath: {{ required "ERROR: the EFS mount point requires a mount_dest." $efs_ap.mount_dest }}
                {{- end }} {{/* # end range $efs_ap */}}
                {{- end }} {{/* # end range $efs_mount */}}
                {{- end }} {{/* # end if storage.efs */}}
                {{- if and (hasKey $job "extraFiles") $job.extraFiles }}
                {{- range $filename, $file := $job.extraFiles }}
                {{- if $file.enabled }}
                - name: cronjob-files
                  mountPath: '{{ $file.mountPath }}'
                  subPath: '{{ $filename }}'
                  readOnly: true
                {{- end }}
                {{- end }} {{/* # end range extraFiles */}}
                {{- end }} {{/* # end exists extraFiles */}}
                {{- if $.Values.customConfigMap }}
                - mountPath: /configMaps/{{ $.Values.customConfigMap }}
                  name: {{ $.Values.customConfigMap }}
                {{- end }}
                {{- range $job_name, $map := $.Values.configMaps }}
                - mountPath: /configMaps/{{ $job_name }}
                  name: {{ $job_name }}
                {{- end }}
                {{- range $job_name, $secret := $.Values.secrets }}
                - mountPath: /secrets/{{ $job_name }}
                  name: {{ $job_name }}
                {{- end }}
          {{- with $job.nodeSelector | default $.Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $job.affinity | default $.Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $job.tolerations | default $.Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumes:
            {{- if and $job.storage (hasKey $job.storage "efs") (hasKey $job.storage.efs "mounts") }}
            {{- range $efs_mount := $job.storage.efs.mounts }}
            {{- range $efs_ap := $efs_mount.access_points }}
            {{- $EFS_AP_ID_TRIMMED := trimPrefix "fsap-" $efs_ap.id }}
            {{- $PVC_NAME := include "com.klicktipp.slugify-volume-name" (list $.Release.Name $JOB_NAME_SLUG (coalesce $efs_ap.name $efs_ap.path) $EFS_AP_ID_TRIMMED) }}
            - name: {{ $PVC_NAME }}
              persistentVolumeClaim:
                claimName: {{ $PVC_NAME }}
            {{- end }} {{/* # end range $efs_ap */}}
            {{- end }} {{/* # end range $efs_mount */}}
            {{- end }} {{/* # end if storage.efs */}}
            {{- if and (hasKey $job "extraFiles") $job.extraFiles }}
            - name: cronjob-files
              configMap:
                name: {{ include "com.klicktipp.slugify-volume-name" (list $chart_name "files" $JOB_NAME_SLUG) }}
                items:
                {{- range $filename, $file := $job.extraFiles }}
                  {{- if $file.enabled }}
                  - key: '{{ $filename }}'
                    path: '{{ $filename }}'
                    mode: {{ ($file.mode | default "0644") | toDecimal }}
                  {{- end }}
                {{- end }} {{/* # end range extraFiles */}}
            {{- end }} {{/* # end exists extraFiles */}}
            {{- if $.Values.customConfigMap }}
            - name: {{ $.Values.customConfigMap }}
              configMap:
                name: {{ $.Values.customConfigMap }}
            {{- end }}
            {{- range $job_name, $map := $.Values.configMaps }}
            - name: {{ $job_name }}
              configMap:
                name: {{ print $chart_name "-" $job_name }}
            {{- end }}
            {{- range $job_name, $secret := $job.secrets | default $.Values.secrets }}
            - name: {{ $job_name }}
              secret:
                secretName: {{ print $chart_name "-" $job_name }}
            {{- end }}
  {{- end }}
